language Essence 1.3
$ prob010.essence: Social Golfer Problem
$ Problem details available at http://www.csplib.org/Problems/prob010/
$
$ In a golf club there are a number of golfers who wish to play together in g
$ groups of size s. Find a schedule of play for w weeks such that no pair of
$ golfers play together more than once.

given w, g, s : int(1..)

letting Golfers be new type of size g * s
letting Weeks be new type of size w
letting Groups be new type of size g

find sched : matrix indexed by [Golfers, Weeks] of Groups 
such that


forAll gr: Groups. 
    forAll w : Weeks . 
        (sum g : Golfers. toInt(sched[g,w] = gr)) = s, 


forAll g1, g2 : Golfers, g1 != g2 .
    forAll w1, w2 : Weeks, w1 != w2 . 
        (toInt(sched[g1,w1] = sched[g2,w1]) + toInt(sched[g1,w2] = sched[g2,w2])) <= 1, 
