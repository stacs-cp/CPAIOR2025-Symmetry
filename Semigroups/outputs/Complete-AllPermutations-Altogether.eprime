language ESSENCE' 1.0

given n: int
find f_FunctionND: matrix indexed by [int(1..n), int(1..n)] of int(1..n)
branching on [f_FunctionND]
find conjure_aux1_FunctionND:
        matrix indexed by [matrix indexed by [int(1..n)] of int(1..n), matrix indexed by [int(1..n)] of int(1..n),
                           int(1..n), int(1..n)] of
            int(1..n)
such that
    and([and([conjure_aux1_FunctionND
                  [[q14_1, catchUndef(q1_PermutationAsFunction_PermutationFunction_forwards_Function1D[q14_1], 0);
                        int(1..2)]
                       [toInt(or([q16 = q14_1 | q16 : int(1..n)])) + 1],
                   [q14_2, catchUndef(q1_PermutationAsFunction_PermutationFunction_forwards_Function1D[q14_2], 0);
                        int(1..2)]
                       [toInt(or([q18 = q14_2 | q18 : int(1..n)])) + 1]]
              =
              [f_FunctionND[q14_1, q14_2],
               catchUndef(q1_PermutationAsFunction_PermutationFunction_forwards_Function1D[f_FunctionND[q14_1, q14_2]],
                          0);
                   int(1..2)]
                  [toInt(or([q20 = f_FunctionND[q14_1, q14_2] | q20 : int(1..n)])) + 1]
                  | q14_1 : int(1..n), q14_2 : int(1..n)])
             | q1_PermutationAsFunction_PermutationFunction_forwards_Function1D : matrix indexed by [int(1..n)] of
                                                                                      int(1..n),
               q1_PermutationAsFunction_PermutationFunction_backwards_Function1D : matrix indexed by [int(1..n)] of
                                                                                       int(1..n)]),
    and([and([f_FunctionND
                  [[q21_1, catchUndef(q1_PermutationAsFunction_PermutationFunction_backwards_Function1D[q21_1], 0);
                        int(1..2)]
                       [toInt(or([q23 = q21_1 | q23 : int(1..n)])) + 1],
                   [q21_2, catchUndef(q1_PermutationAsFunction_PermutationFunction_backwards_Function1D[q21_2], 0);
                        int(1..2)]
                       [toInt(or([q25 = q21_2 | q25 : int(1..n)])) + 1]]
              =
              [conjure_aux1_FunctionND[q21_1, q21_2],
               catchUndef(q1_PermutationAsFunction_PermutationFunction_backwards_Function1D
                              [conjure_aux1_FunctionND[q21_1, q21_2]],
                          0);
                   int(1..2)]
                  [toInt(or([q27 = conjure_aux1_FunctionND[q21_1, q21_2] | q27 : int(1..n)])) + 1]
                  | q21_1 : int(1..n), q21_2 : int(1..n)])
             | q1_PermutationAsFunction_PermutationFunction_forwards_Function1D : matrix indexed by [int(1..n)] of
                                                                                      int(1..n),
               q1_PermutationAsFunction_PermutationFunction_backwards_Function1D : matrix indexed by [int(1..n)] of
                                                                                       int(1..n)]),
    and([flatten([[f_FunctionND[q28, q29] | q29 : int(1..n)] | q28 : int(1..n)]) <=lex
         flatten([[conjure_aux1_FunctionND[q30, q31] | q31 : int(1..n)] | q30 : int(1..n)])
             | q1_PermutationAsFunction_PermutationFunction_forwards_Function1D : matrix indexed by [int(1..n)] of
                                                                                      int(1..n),
               q1_PermutationAsFunction_PermutationFunction_backwards_Function1D : matrix indexed by [int(1..n)] of
                                                                                       int(1..n),
               allDiff(q1_PermutationAsFunction_PermutationFunction_forwards_Function1D),
               and([or([q1_PermutationAsFunction_PermutationFunction_forwards_Function1D[q9] = q8 | q9 : int(1..n)])
                        | q8 : int(1..n)]),
               allDiff(q1_PermutationAsFunction_PermutationFunction_backwards_Function1D),
               and([or([q1_PermutationAsFunction_PermutationFunction_backwards_Function1D[q12] = q11 | q12 : int(1..n)])
                        | q11 : int(1..n)]),
               and([q1_PermutationAsFunction_PermutationFunction_backwards_Function1D
                        [q1_PermutationAsFunction_PermutationFunction_forwards_Function1D[q7]]
                    = q7
                        | q7 : int(1..n)]),
               and([q1_PermutationAsFunction_PermutationFunction_forwards_Function1D
                        [q1_PermutationAsFunction_PermutationFunction_backwards_Function1D[q7]]
                    = q7
                        | q7 : int(1..n)])])

$ Conjure's
$ {"finds": [{"Name": "f"}], "givens": [{"Name": "n"}], "enumGivens": [], "enumLettings": [],
$  "lettings":
$      [[{"Name": "T"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagUnnamed": "T"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "n"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]},
$                                      {"NoRegion": []}]}]}]}]]}}]],
$  "unnameds": [[{"Name": "T"}, {"Reference": [{"Name": "n"}, null]}]], "strategyQ": {"PickFirst": []},
$  "strategyA": {"Compact": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "nameGenState": [["conjure_aux", 2], ["q", 32]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "f"},
$        {"DomainFunction":
$             [{"Function_ND": []}, [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple":
$                   [{"DomainInt":
$                         [{"TagUnnamed": "T"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagUnnamed": "T"}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "n"},
$                                       {"DeclNoRepr":
$                                            ["Given", {"Name": "n"}, {"DomainInt": [{"TagUnnamed": "T"}, []]},
$                                             {"NoRegion": []}]}]}]}]]},
$                    {"DomainInt":
$                         [{"TagUnnamed": "T"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagUnnamed": "T"}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "n"},
$                                       {"DeclNoRepr":
$                                            ["Given", {"Name": "n"}, {"DomainInt": [{"TagUnnamed": "T"}, []]},
$                                             {"NoRegion": []}]}]}]}]]}]},
$              {"DomainInt":
$                   [{"TagUnnamed": "T"},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagUnnamed": "T"}, 1]}},
$                           {"Reference":
$                                [{"Name": "n"},
$                                 {"DeclNoRepr":
$                                      ["Given", {"Name": "n"}, {"DomainInt": [{"TagUnnamed": "T"}, []]},
$                                       {"NoRegion": []}]}]}]}]]}]}],
$       [{"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}]],
$  "representationsTree":
$      [[{"Name": "f"},
$        [{"rootLabel": {"Function_ND": []},
$          "subForest":
$              [{"rootLabel": null,
$                "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]},
$               {"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "n"}, [{"rootLabel": null, "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "f"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple": [{"DomainReference": [{"Name": "T"}, null]}, {"DomainReference": [{"Name": "T"}, null]}]},
$              {"DomainReference": [{"Name": "T"}, null]}]}]],
$  "trailGeneralised":
$      [[5540639257424529677, -746767053920073212], [5100691625680875363, -7655646450704183747],
$       [-1881674025150675430, -7149129457570192754], [-8928093643292029462, -8961883438745810970],
$       [2542333855807077176, -5036538165715817888], [4177945092113232548, 4276040838919713926],
$       [152605867393395288, 7436465885945708280], [-410363398683951424, -9129871601787058867],
$       [8200139047459448607, 5951743708844929775], [-8975758204799304450, 8885470625513364874],
$       [3451334463551822780, 5302206065107184291], [7066007583561326554, -734053252754620019],
$       [-2092834684336681286, -2648725781973789511], [2403477148245673565, 1920226663560916380],
$       [-4722478589821111999, 2547585977347030238], [599673714441453740, -2648725781973789511],
$       [5972515141909355880, 1920226663560916380], [7310112731819451095, 2547585977347030238],
$       [3660999218790916165, -1608960467751771457], [-962154677051292103, -2648725781973789511],
$       [-8614500201215611503, 1920226663560916380], [7285622730834375974, 2547585977347030238],
$       [2223555168699050002, -8939048891340135113], [-3488499692130965846, -1751674648945740874],
$       [-2561438017302889440, 4583187298514630603], [4292987450375604784, -8799216502636613041],
$       [-5106155544048474923, -2648725781973789511], [-3343839106099324733, -3671919862405657394],
$       [919159998363553918, -2648725781973789511], [-9026239545932623631, -3671919862405657394],
$       [7833294739984994229, 5667563234864644843], [-7905731740482917586, -2648725781973789511],
$       [5346360218491361645, -3671919862405657394], [-687086210987256950, -8777493262769002009],
$       [2456155070878801798, 2166118602389652414], [1666649006877469944, -620928124437387069],
$       [-7909607989482905142, 1651217083777206161], [-4304872353935789040, 1920226663560916380],
$       [-1462422955667139461, -3671919862405657394], [-7800169310111610179, 1920226663560916380],
$       [6988525895262892063, -3671919862405657394], [2585054970378734241, -3040503298295319753],
$       [6017011109006166332, 1920226663560916380], [4964727889418986446, -3671919862405657394],
$       [534803037302057806, -1382249229441211209], [2480919919696723662, 1155459667265905837],
$       [1442300790569036056, 467332274518088160], [2731823302541053795, -1585579728186258704],
$       [5752744085863995811, -700991235188904669], [-2355958244604459776, 2994505388845486124],
$       [7018264329836789186, 8989978555130026805], [-5928120400642598605, -4179686098505666976],
$       [-4913498970690217031, 4474379724473522424], [8454377324222055944, 8989978555130026805],
$       [-2485382499374945502, -4179686098505666976], [1278815669862643569, 4474379724473522424],
$       [1170221495573168175, 1714987551504350485], [8506689287312748877, 8989978555130026805],
$       [6315684274899818511, -4179686098505666976], [1033502183282755336, 4474379724473522424],
$       [-1841597976801130496, -4692814842821819632], [-110657924556800262, 4000731780696694872],
$       [-6525571661530470320, 1301233398142947959], [7347969784612449340, -7442812631522415698],
$       [5010836403813661311, 8989978555130026805], [-5367792150331673613, 3086848083262193370],
$       [-8805781830963384216, 8989978555130026805], [-3438205187622440979, 3086848083262193370],
$       [6198774017563195261, 7173806939042857785], [-5351469746130078620, 8989978555130026805],
$       [3162527129064316265, 3086848083262193370], [1173927114368633188, 715338815929075136],
$       [1259441070250080199, 6287097959506477132], [-4208586026147877253, 3165564634232737583],
$       [7379428715643466148, 7305092586403162200], [-2276194110496123792, -4179686098505666976],
$       [-1567169080759867703, 3086848083262193370], [7756147645925816889, -4179686098505666976],
$       [3045983971806221497, 3086848083262193370], [-4112032491222892927, 3639018018902985989],
$       [7234626339504686258, -4179686098505666976], [-8827401432608469734, 3086848083262193370],
$       [4704403572756294860, 5637070337595058944], [-323361637300324039, -4705677272552630335],
$       [-9212802787636609978, 7739001487129983172], [-4587937391123660096, 6994659297298911529],
$       [1200370550944585926, -6362917483693702925], [-4057221973260309064, -2894171366495229172],
$       [3886690849158564882, -5105024625408195844], [3345835870429253794, -1977213423061812762],
$       [3636475637993608446, -2818331395526656220], [5735750270661569514, 6795227042910786899],
$       [-6885015249523734132, 5315317524109618293], [8320709209451811788, 7686598587155461229],
$       [-9111355418691970222, -8279991708424119771], [495218819596098682, 4858738994717432283],
$       [-82964158557219726, 5780224086150852509], [-1716733271484568729, -804072981913199359],
$       [-7853093295186540963, -804072981913199359], [2058950475351682972, 2961700168112788161],
$       [2555912548373231707, -8121825376957859116], [-3912898522008391802, 3702223768324952602],
$       [5589390503498524841, 6377803691148929775], [3548940784560584420, -8883174148108581258],
$       [-3403465188252382229, -1315240132716912298], [-5402422674647579056, -847960380825704042],
$       [7301949123551095970, -6795022781703527261], [-6025233971570197889, -8602031053402553860],
$       [6856009138298729900, -6393373868412121464], [-7714000451294072320, -6073633015163848848],
$       [-6133326719079660003, 123783351624825592], [1368297547686682097, 1829239880067777617],
$       [7656102477693944416, -7625766774964707616]],
$  "trailVerbose": [], "trailRewrites": []}
