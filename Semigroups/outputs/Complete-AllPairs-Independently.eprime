language ESSENCE' 1.0

given n: int
find f_FunctionND: matrix indexed by [int(1..n), int(1..n)] of int(1..n)
branching on [f_FunctionND]
find conjure_aux1_FunctionND: matrix indexed by [int(1..n), int(1..n), int(1..n), int(1..n)] of int(1..n)
such that
    and([f_FunctionND[f_FunctionND[i, j], k] = f_FunctionND[i, f_FunctionND[j, k]]
             | i : int(1..n), j : int(1..n), k : int(1..n)]),
    and([and([conjure_aux1_FunctionND
                  [q1, q2, catchUndef([q10_1, q2, q1; int(0..2)][toInt(q1 = q10_1) + toInt(q2 = q10_1) * 2], 1),
                   catchUndef([q10_2, q2, q1; int(0..2)][toInt(q1 = q10_2) + toInt(q2 = q10_2) * 2], 1)]
              =
              catchUndef([f_FunctionND[q10_1, q10_2], q2, q1; int(0..2)]
                             [toInt(q1 = f_FunctionND[q10_1, q10_2]) + toInt(q2 = f_FunctionND[q10_1, q10_2]) * 2],
                         1)
                  | q10_1 : int(1..n), q10_2 : int(1..n)])
             | q1 : int(1..n), q2 : int(1..n), q1 < q2]),
    and([and([f_FunctionND
                  [catchUndef([q20_1, q2, q1; int(0..2)][toInt(q1 = q20_1) + toInt(q2 = q20_1) * 2], 1),
                   catchUndef([q20_2, q2, q1; int(0..2)][toInt(q1 = q20_2) + toInt(q2 = q20_2) * 2], 1)]
              =
              catchUndef([conjure_aux1_FunctionND[q1, q2, q20_1, q20_2], q2, q1; int(0..2)]
                             [toInt(q1 = conjure_aux1_FunctionND[q1, q2, q20_1, q20_2]) +
                              toInt(q2 = conjure_aux1_FunctionND[q1, q2, q20_1, q20_2]) * 2],
                         1)
                  | q20_1 : int(1..n), q20_2 : int(1..n)])
             | q1 : int(1..n), q2 : int(1..n), q1 < q2]),
    and([flatten([[f_FunctionND[q33, q34] | q34 : int(1..n)] | q33 : int(1..n)]) <=lex
         flatten([[conjure_aux1_FunctionND[q1, q2, q35, q36] | q36 : int(1..n)] | q35 : int(1..n)])
             | q1 : int(1..n), q2 : int(1..n), q1 < q2]),
    and([and([conjure_aux1_FunctionND[q53, q54, q55, q56] = 1
                  | q53 : int(1..n), q54 : int(1..n), q55 : int(1..n), q56 : int(1..n)])
             | q1 : int(1..n), q2 : int(1..n), !(q1 < q2)])

$ Conjure's
$ {"finds": [{"Name": "f"}], "givens": [{"Name": "n"}], "enumGivens": [], "enumLettings": [],
$  "lettings":
$      [[{"Name": "T"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagUnnamed": "T"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "n"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]},
$                                      {"NoRegion": []}]}]}]}]]}}]],
$  "unnameds": [[{"Name": "T"}, {"Reference": [{"Name": "n"}, null]}]], "strategyQ": {"PickFirst": []},
$  "strategyA": {"Compact": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "nameGenState": [["conjure_aux", 2], ["q", 69]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "f"},
$        {"DomainFunction":
$             [{"Function_ND": []}, [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple":
$                   [{"DomainInt":
$                         [{"TagUnnamed": "T"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagUnnamed": "T"}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "n"},
$                                       {"DeclNoRepr":
$                                            ["Given", {"Name": "n"}, {"DomainInt": [{"TagUnnamed": "T"}, []]},
$                                             {"NoRegion": []}]}]}]}]]},
$                    {"DomainInt":
$                         [{"TagUnnamed": "T"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagUnnamed": "T"}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "n"},
$                                       {"DeclNoRepr":
$                                            ["Given", {"Name": "n"}, {"DomainInt": [{"TagUnnamed": "T"}, []]},
$                                             {"NoRegion": []}]}]}]}]]}]},
$              {"DomainInt":
$                   [{"TagUnnamed": "T"},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagUnnamed": "T"}, 1]}},
$                           {"Reference":
$                                [{"Name": "n"},
$                                 {"DeclNoRepr":
$                                      ["Given", {"Name": "n"}, {"DomainInt": [{"TagUnnamed": "T"}, []]},
$                                       {"NoRegion": []}]}]}]}]]}]}],
$       [{"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}]],
$  "representationsTree":
$      [[{"Name": "f"},
$        [{"rootLabel": {"Function_ND": []},
$          "subForest":
$              [{"rootLabel": null,
$                "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]},
$               {"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "n"}, [{"rootLabel": null, "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "f"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple": [{"DomainReference": [{"Name": "T"}, null]}, {"DomainReference": [{"Name": "T"}, null]}]},
$              {"DomainReference": [{"Name": "T"}, null]}]}]],
$  "trailGeneralised":
$      [[-5476427977463511516, -2121193535233639391], [5540639257424529677, -746767053920073212],
$       [2245225761335283150, 6466054477370906567], [3802798906502969359, 1049354732829947072],
$       [-7898634416637133483, -4081987672863016548], [-3981526222733766735, -490824154058014532],
$       [-3810701350058309225, -8925447042550832966], [-4496368512729229093, 2818424369974949672],
$       [-626808540270919131, -5519993796113613430], [2080800644108444330, 8261314620015957629],
$       [455623498414485775, 1793859717661624021], [5892166589275188102, 3403652386164267363],
$       [-5265840403129286046, -5992153804590008566], [-981228633259739123, -7325910313564812496],
$       [8332903524821265814, 8702821700567757468], [8475251773151756195, -6052843084100145004],
$       [-2708812879254309526, -239642592126756316], [4336312526756171730, -3855441833806326951],
$       [3302667419991613043, -6898135329846002435], [2680603702285915330, 2298481937640210800],
$       [-6699575839089056804, 7851413729678864740], [-5853724580116629246, -6898135329846002435],
$       [-2442224507835305733, 2298481937640210800], [-1852314427270744407, 7851413729678864740],
$       [6740063498374767642, -6898135329846002435], [-2245051552007850508, 2298481937640210800],
$       [2940841179436607331, 7851413729678864740], [564126549829275609, -6898135329846002435],
$       [3109924187241083149, -1440584099367360534], [6174811082928097093, -6898135329846002435],
$       [3227476929615682809, -1440584099367360534], [-2514852048743756612, -6898135329846002435],
$       [-4604317066274942707, -1440584099367360534], [-263593662688707438, 2298481937640210800],
$       [6870460648032022965, -1440584099367360534], [-1836529422233285707, 2298481937640210800],
$       [1719310677000460542, -1440584099367360534], [-7265937827904961108, 2298481937640210800],
$       [851207405187959736, -1440584099367360534], [8175930573504948270, -5302989865597070516],
$       [-977567224657177940, -2443493294233436864], [-8086190194977506412, -649305093026688627],
$       [-3130398675537208415, 7428373991548761104], [1811893406880219679, 5722470962488917864],
$       [7963648927063398655, -649305093026688627], [2192484565589846874, 7428373991548761104],
$       [6150299843908808232, 5722470962488917864], [-3804233427570834439, -649305093026688627],
$       [-8540964789346075795, 7428373991548761104], [-7885327925080597828, 5722470962488917864],
$       [-3879214814483096406, -649305093026688627], [1497327814199879884, -7561097604059471350],
$       [-5189907541379804702, -649305093026688627], [-2084664523285253544, -7561097604059471350],
$       [4595628595414457263, -649305093026688627], [-6243630677415642282, -7561097604059471350],
$       [-5935827896295903491, 7428373991548761104], [4462652186938351034, -7561097604059471350],
$       [-8972507980607517920, 7428373991548761104], [-3935061605993812989, -7561097604059471350],
$       [7060781853829358505, 7428373991548761104], [-7064703205703834133, -7561097604059471350],
$       [3596117720924101624, -8411349027335405627], [5115102209186128755, -3944855441156687426],
$       [6647043118255301463, 4393905101099755634], [-3272740431980376640, 6895334489512829900],
$       [8838119231465571920, -7730037547271430920], [8738972853593908389, 4449430609015614375],
$       [358014686264304538, 2098298742566793567], [4394582970445069655, -3932801124757767705],
$       [5202588694520590962, 880845255815829111], [-6657122919825208160, -6896030992160641526],
$       [7447704891243418380, -31096925200278586], [3721667691900382320, -8533689555205616472],
$       [8467756302997086003, -8121825376957859116], [7590092505977642428, -5569480378840186584],
$       [-7222364509831844562, -1155871689361749917], [-1483135830029044134, 4285581219125536470],
$       [2060083094390123709, -7361930188838378157], [8927327831439981735, 4298824283203933212],
$       [-3020239907208323281, -6357958493211837893], [5498745281214788944, 251586850741695446],
$       [5227124153890496654, -4076636716782005042], [-3382592227091291971, -7361930188838378157],
$       [-6082832880623655133, -7742244542893646072], [540136488812036795, 2382908856567618291],
$       [-1834902483829859027, -4301274954866807306], [-6099801759438001165, -7361930188838378157],
$       [-8496750486874091216, -8617219459952082694], [-8675531158196582488, -739535389141395567],
$       [-3474629342514327741, -3285687864574867480], [3368413758028638690, -5920221634468929318],
$       [-7627282532683385695, 3098870476494765588], [-201715677981290712, -8602031053402553860],
$       [1113302560301130819, 5950824812573503342], [-4619389319842219036, -7361930188838378157],
$       [8363689094531431252, 3518379351097894626], [8436300748810813423, 6616634299456532400],
$       [-8147502744944521396, 1824735740215963030], [2034072788757893275, -7361930188838378157],
$       [-1608110457896109833, -6056702003121435174], [-4536260165422574029, -209526280900810978],
$       [3688610590419675155, -7361930188838378157], [-7966487416082852510, 5954589883445300710],
$       [1621067138937268177, 1604271182063061716], [4313232263416851758, -1493501527510535672],
$       [8600647306716942579, -6646625773124917772], [7663430145264516633, -6753128139387108813]],
$  "trailVerbose": [], "trailRewrites": []}
